<?xml version="1.0"?>
<unit xmlns="http://qcad.org/namespaces/src" xmlns:qc="http://qcad.org/namespaces/xsl" filename="RXLine.h">
  <class_decl name="RBox" />
  <class_decl name="RPolyline" />
  <class name="RXLine" sharedpointer="true">
    <super_list>
      <super name="RShape" downcast="true" />
    </super_list>
    <constructor>
      <variant>
        <parameters />
      </variant>
      <variant>
        <parameters>
          <parameter const="true" type="RLine" modifier="&amp;" name="line" />
        </parameters>
      </variant>
      <variant>
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="basePoint" />
          <parameter const="true" type="RVector" modifier="&amp;" name="directionVector" />
        </parameters>
      </variant>
      <variant>
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="basePoint" />
          <parameter const="false" type="double" modifier="" name="angle" />
          <parameter const="false" type="double" modifier="" name="distance" />
        </parameters>
      </variant>
    </constructor>
    <function name="getShapeType">
      <variant return-type="RShape::Type" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getLineShape">
      <variant return-type="RLine" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="clone">
      <variant return-type="RXLine*" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="isDirected">
      <variant return-type="bool" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getBoundingBox">
      <variant return-type="RBox" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setZ">
      <variant return-type="void" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="z" />
        </parameters>
      </variant>
    </function>
    <function name="getVectorProperties">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getEndPoints">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getMiddlePoints">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getCenterPoints">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getPointsWithDistanceToEnd">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="distance" />
          <parameter const="false" type="int" modifier="" name="from" default="RS::FromAny" />
        </parameters>
      </variant>
    </function>
    <function name="getPointCloud">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="segmentLength" />
        </parameters>
      </variant>
    </function>
    <function name="getAngleAt">
      <variant return-type="double" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="distance" />
          <parameter const="false" type="RS::From" modifier="" name="from" default="RS::FromStart" />
        </parameters>
      </variant>
    </function>
    <function name="getVectorTo">
      <variant return-type="RVector" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="point" />
          <parameter const="false" type="bool" modifier="" name="limited" default="true" />
          <parameter const="false" type="double" modifier="" name="strictRange" default="RMAXDOUBLE" />
        </parameters>
      </variant>
    </function>
    <function name="getBasePoint">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setBasePoint">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="vector" />
        </parameters>
      </variant>
    </function>
    <function name="getSecondPoint">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setSecondPoint">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="vector" />
        </parameters>
      </variant>
    </function>
    <function name="getDirectionVector">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setDirectionVector">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="vector" />
        </parameters>
      </variant>
    </function>
    <function name="getMiddlePoint">
      <variant return-type="RVector" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getLength">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setLength">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="l" />
        </parameters>
      </variant>
    </function>
    <function name="getAngle">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setAngle">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="a" />
        </parameters>
      </variant>
    </function>
    <function name="getDirection1">
      <variant return-type="double" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getDirection2">
      <variant return-type="double" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getSideOfPoint">
      <variant return-type="RS::Side" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="point" />
        </parameters>
      </variant>
    </function>
    <function name="getStartPoint">
      <variant return-type="RVector" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getEndPoint">
      <variant return-type="RVector" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="trimStartPoint">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="trimPoint" />
          <parameter const="true" type="RVector" modifier="&amp;" name="clickPoint" default="RVector::invalid" />
          <parameter const="false" type="bool" modifier="" name="extend" default="false" />
        </parameters>
      </variant>
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="trimDist" />
        </parameters>
      </variant>
    </function>
    <function name="trimEndPoint">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="trimPoint" />
          <parameter const="true" type="RVector" modifier="&amp;" name="clickPoint" default="RVector::invalid" />
          <parameter const="false" type="bool" modifier="" name="extend" default="false" />
        </parameters>
      </variant>
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="trimDist" />
        </parameters>
      </variant>
    </function>
    <function name="getTrimEnd">
      <variant return-type="RS::Ending" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="trimPoint" />
          <parameter const="true" type="RVector" modifier="&amp;" name="clickPoint" />
        </parameters>
      </variant>
    </function>
    <function name="getDistanceFromStart">
      <variant return-type="double" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="p" />
        </parameters>
      </variant>
    </function>
    <function name="getClippedLine">
      <variant return-type="RLine" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RBox" modifier="&amp;" name="box" />
        </parameters>
      </variant>
    </function>
    <function name="move">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="offset" />
        </parameters>
      </variant>
    </function>
    <function name="rotate">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="rotation" />
          <parameter const="true" type="RVector" modifier="&amp;" name="center" default="RDEFAULT_RVECTOR" />
        </parameters>
      </variant>
    </function>
    <function name="scale">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="scaleFactors" />
          <parameter const="true" type="RVector" modifier="&amp;" name="center" default="RDEFAULT_RVECTOR" />
        </parameters>
      </variant>
    </function>
    <function name="mirror">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RLine" modifier="&amp;" name="axis" />
        </parameters>
      </variant>
    </function>
    <function name="reverse">
      <variant return-type="bool" virtual="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="stretch">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RPolyline" modifier="&amp;" name="area" />
          <parameter const="true" type="RVector" modifier="&amp;" name="offset" />
        </parameters>
      </variant>
    </function>
    <function name="getTransformed">
      <variant return-type="QSharedPointer&lt;RShape&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="QTransform" modifier="&amp;" name="transform" />
        </parameters>
      </variant>
    </function>
    <function name="getOffsetShapes">
      <variant return-type="QList&lt;QSharedPointer&lt;RShape&gt;&gt;" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="distance" />
          <parameter const="false" type="int" modifier="" name="number" />
          <parameter const="false" type="RS::Side" modifier="" name="side" />
          <parameter const="true" type="RVector" modifier="&amp;" name="position" default="RVector::invalid" />
        </parameters>
      </variant>
    </function>
    <function name="splitAt">
      <variant return-type="QList&lt;QSharedPointer&lt;RShape&gt;&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="QList&lt;RVector&gt;" modifier="&amp;" name="points" />
        </parameters>
      </variant>
    </function>
    <function name="print" />
    <preproc plain="#if QT_VERSION&gt;=0x060000" />
    <function name="copy">
      <variant return-type="RXLine" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <preproc plain="#endif" />
  </class>
</unit>
