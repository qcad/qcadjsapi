<?xml version="1.0"?>
<unit xmlns="http://qcad.org/namespaces/src" xmlns:qc="http://qcad.org/namespaces/xsl" filename="RImageEntity.h">
  <class_decl name="RDocument" />
  <class_decl name="RExporter" />
  <class name="RImageEntity" ownership="cpp" sharedpointer="true">
    <super_list>
      <super name="RObject" />
      <super name="REntity" />
    </super_list>
    <property static="true" type="RPropertyTypeId" name="PropertyCustom" />
    <property static="true" type="RPropertyTypeId" name="PropertyHandle" />
    <property static="true" type="RPropertyTypeId" name="PropertyProtected" />
    <property static="true" type="RPropertyTypeId" name="PropertyWorkingSet" />
    <property static="true" type="RPropertyTypeId" name="PropertyType" />
    <property static="true" type="RPropertyTypeId" name="PropertyBlock" />
    <property static="true" type="RPropertyTypeId" name="PropertyLayer" />
    <property static="true" type="RPropertyTypeId" name="PropertyLinetype" />
    <property static="true" type="RPropertyTypeId" name="PropertyLinetypeScale" />
    <property static="true" type="RPropertyTypeId" name="PropertyLineweight" />
    <property static="true" type="RPropertyTypeId" name="PropertyColor" />
    <property static="true" type="RPropertyTypeId" name="PropertyDisplayedColor" />
    <property static="true" type="RPropertyTypeId" name="PropertyDrawOrder" />
    <property static="true" type="RPropertyTypeId" name="PropertyFileName" />
    <property static="true" type="RPropertyTypeId" name="PropertyInsertionPointX" />
    <property static="true" type="RPropertyTypeId" name="PropertyInsertionPointY" />
    <property static="true" type="RPropertyTypeId" name="PropertyInsertionPointZ" />
    <property static="true" type="RPropertyTypeId" name="PropertyUX" />
    <property static="true" type="RPropertyTypeId" name="PropertyUY" />
    <property static="true" type="RPropertyTypeId" name="PropertyVX" />
    <property static="true" type="RPropertyTypeId" name="PropertyVY" />
    <property static="true" type="RPropertyTypeId" name="PropertyScaleFactorX" />
    <property static="true" type="RPropertyTypeId" name="PropertyScaleFactorY" />
    <property static="true" type="RPropertyTypeId" name="PropertyAngle" />
    <property static="true" type="RPropertyTypeId" name="PropertyWidth" />
    <property static="true" type="RPropertyTypeId" name="PropertyHeight" />
    <property static="true" type="RPropertyTypeId" name="PropertyFade" />
    <constructor>
      <variant>
        <parameters>
          <parameter const="false" type="RDocument" modifier="*" name="document" />
          <parameter const="true" type="RImageData" modifier="&amp;" name="data" />
        </parameters>
      </variant>
      <variant>
        <parameters>
          <parameter const="true" type="RImageEntity" modifier="&amp;" name="other" />
        </parameters>
      </variant>
    </constructor>
    <function name="init" static="true">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getRtti" static="true">
      <variant return-type="RS::EntityType" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getStaticPropertyTypeIds" static="true">
      <variant return-type="QSet&lt;RPropertyTypeId&gt;" access="public">
        <parameters />
      </variant>
    </function>
    <function name="clone">
      <variant return-type="RImageEntity*" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setProperty">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="RPropertyTypeId" modifier="" name="propertyTypeId" />
          <parameter const="true" type="QVariant" modifier="&amp;" name="value" />
          <parameter const="false" type="RTransaction" modifier="*" name="transaction" default="NULL" />
        </parameters>
      </variant>
    </function>
    <function name="getProperty">
      <variant return-type="QPair&lt;QVariant,RPropertyAttributes&gt;" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="RPropertyTypeId" modifier="&amp;" name="propertyTypeId" />
          <parameter const="false" type="bool" modifier="" name="humanReadable" default="false" />
          <parameter const="false" type="bool" modifier="" name="noAttributes" default="false" />
          <parameter const="false" type="bool" modifier="" name="showOnRequest" default="false" />
        </parameters>
      </variant>
    </function>
    <function name="exportEntity">
      <variant return-type="void" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="RExporter" modifier="&amp;" name="e" />
          <parameter const="false" type="bool" modifier="" name="preview" default="false" />
          <parameter const="false" type="bool" modifier="" name="forceSelected" default="false" />
        </parameters>
      </variant>
    </function>
    <function name="getData">
      <variant return-type="RImageData&amp;" virtual="true" access="public">
        <parameters />
      </variant>
      <!--
      <variant return-type="const RImageData&amp;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
      -->
    </function>
    <function name="getFileName">
      <variant return-type="QString" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setFileName">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QString" modifier="&amp;" name="fn" />
        </parameters>
      </variant>
    </function>
    <function name="getInsertionPoint">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setInsertionPoint">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="ip" />
        </parameters>
      </variant>
    </function>
    <function name="getUVector">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getVVector">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getBrightness">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getContrast">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getFade">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setWidth">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="w" />
          <parameter const="false" type="bool" modifier="" name="keepRatio" default="false" />
        </parameters>
      </variant>
    </function>
    <function name="setHeight">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="h" />
          <parameter const="false" type="bool" modifier="" name="keepRatio" default="false" />
        </parameters>
      </variant>
    </function>
    <function name="setAngle">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="a" />
        </parameters>
      </variant>
    </function>
    <function name="getWidth">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getHeight">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getPixelWidth">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getPixelHeight">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="print" />
  </class>
</unit>
