<?xml version="1.0"?>
<unit xmlns="http://qcad.org/namespaces/src" xmlns:qc="http://qcad.org/namespaces/xsl" filename="RLeaderEntity.h">
  <class_decl name="RDocument" />
  <class_decl name="RExporter" />
  <class name="RLeaderEntity" ownership="cpp" sharedpointer="true" proxy="true">
    <super_list>
      <super name="RObject" />
      <super name="REntity" downcast="true" />
    </super_list>
    <property static="true" type="RPropertyTypeId" name="PropertyCustom" />
    <property static="true" type="RPropertyTypeId" name="PropertyHandle" />
    <property static="true" type="RPropertyTypeId" name="PropertyProtected" />
    <property static="true" type="RPropertyTypeId" name="PropertyWorkingSet" />
    <property static="true" type="RPropertyTypeId" name="PropertyType" />
    <property static="true" type="RPropertyTypeId" name="PropertyBlock" />
    <property static="true" type="RPropertyTypeId" name="PropertyLayer" />
    <property static="true" type="RPropertyTypeId" name="PropertyLinetype" />
    <property static="true" type="RPropertyTypeId" name="PropertyLinetypeScale" />
    <property static="true" type="RPropertyTypeId" name="PropertyLineweight" />
    <property static="true" type="RPropertyTypeId" name="PropertyColor" />
    <property static="true" type="RPropertyTypeId" name="PropertyDisplayedColor" />
    <property static="true" type="RPropertyTypeId" name="PropertyDrawOrder" />
    <property static="true" type="RPropertyTypeId" name="PropertyArrowHead" />
    <property static="true" type="RPropertyTypeId" name="PropertySplineShaped" />
    <property static="true" type="RPropertyTypeId" name="PropertyDimLeaderBlock" />
    <property static="true" type="RPropertyTypeId" name="PropertyVertexNX" />
    <property static="true" type="RPropertyTypeId" name="PropertyVertexNY" />
    <property static="true" type="RPropertyTypeId" name="PropertyVertexNZ" />
    <property static="true" type="RPropertyTypeId" name="PropertyDimscale" />
    <property static="true" type="RPropertyTypeId" name="PropertyDimasz" />
    <constructor>
      <variant>
        <parameters>
          <parameter const="false" type="RDocument" modifier="*" name="document" />
          <parameter const="true" type="RLeaderData" modifier="&amp;" name="data" />
        </parameters>
      </variant>
      <variant>
        <parameters>
          <parameter const="true" type="RLeaderEntity" modifier="&amp;" name="other" />
        </parameters>
      </variant>
    </constructor>
    <function name="init" static="true">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getRtti" static="true">
      <variant return-type="RS::EntityType" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getStaticPropertyTypeIds" static="true">
      <variant return-type="QSet&lt;RPropertyTypeId&gt;" access="public">
        <parameters />
      </variant>
    </function>
    <function name="clone">
      <variant return-type="QSharedPointer&lt;RObject&gt;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setProperty">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="RPropertyTypeId" modifier="" name="propertyTypeId" />
          <parameter const="true" type="QVariant" modifier="&amp;" name="value" />
          <parameter const="false" type="RTransaction" modifier="*" name="transaction" default="NULL" />
        </parameters>
      </variant>
    </function>
    <function name="getProperty">
      <variant return-type="QPair&lt;QVariant,RPropertyAttributes&gt;" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="RPropertyTypeId" modifier="&amp;" name="propertyTypeId" />
          <parameter const="false" type="bool" modifier="" name="humanReadable" default="false" />
          <parameter const="false" type="bool" modifier="" name="noAttributes" default="false" />
          <parameter const="false" type="bool" modifier="" name="showOnRequest" default="false" />
        </parameters>
      </variant>
    </function>
    <function name="getData">
      <variant return-type="RLeaderData&amp;" virtual="true" access="public">
        <parameters />
      </variant>
      <!--
      <variant return-type="const RLeaderData&amp;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
      -->
    </function>
    <function name="setData">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="RLeaderData" modifier="&amp;" name="d" />
        </parameters>
      </variant>
    </function>
    <function name="reverse">
      <variant return-type="bool" virtual="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setArrowHead">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="on" />
        </parameters>
      </variant>
    </function>
    <function name="hasArrowHead">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="clear">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="normalize">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="countVertices">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="appendVertex">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="vertex" />
          <parameter const="false" type="double" modifier="" name="bulge" default="0.0" />
        </parameters>
      </variant>
    </function>
    <function name="prependVertex">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="vertex" />
          <parameter const="false" type="double" modifier="" name="bulge" default="0.0" />
        </parameters>
      </variant>
    </function>
    <function name="insertVertex">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="index" />
          <parameter const="true" type="RVector" modifier="&amp;" name="vertex" />
        </parameters>
      </variant>
    </function>
    <function name="insertVertexAt">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="vertex" />
        </parameters>
      </variant>
    </function>
    <function name="getVertexAt">
      <variant return-type="RVector" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
        </parameters>
      </variant>
    </function>
    <function name="setVertexAt">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
          <parameter const="true" type="RVector" modifier="&amp;" name="v" />
        </parameters>
      </variant>
    </function>
    <function name="removeLastVertex">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="removeVertex">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="index" />
        </parameters>
      </variant>
    </function>
    <function name="countSegments">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getSegmentAt">
      <variant return-type="QSharedPointer&lt;RShape&gt;" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
        </parameters>
      </variant>
    </function>
    <function name="getBulgeAt">
      <variant return-type="double" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
        </parameters>
      </variant>
    </function>
    <function name="setBulgeAt">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
          <parameter const="false" type="double" modifier="" name="b" />
        </parameters>
      </variant>
    </function>
    <function name="getClosestSegment">
      <variant return-type="int" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="point" />
        </parameters>
      </variant>
    </function>
    <function name="getDirection1">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getDirection2">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getEndPoint">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getStartPoint">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setClosed">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="on" />
        </parameters>
      </variant>
    </function>
    <function name="isClosed">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getDimscale">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setDimscale">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="v" />
        </parameters>
      </variant>
    </function>
    <function name="getDimasz">
      <variant return-type="double" const="true" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="scale" default="true" />
        </parameters>
      </variant>
    </function>
    <function name="setDimasz">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="v" />
        </parameters>
      </variant>
    </function>
    <function name="getExploded">
      <variant return-type="QList&lt;QSharedPointer&lt;RShape&gt;&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getDimLeaderBlockId">
      <variant return-type="REntity::Id" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setDimLeaderBlockId">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="REntity::Id" modifier="" name="id" />
        </parameters>
      </variant>
    </function>
    <function name="clearStyleOverrides">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="exportEntity">
      <variant return-type="void" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="RExporter" modifier="&amp;" name="e" />
          <parameter const="false" type="bool" modifier="" name="preview" default="false" />
          <parameter const="false" type="bool" modifier="" name="forceSelected" default="false" />
        </parameters>
      </variant>
    </function>
    <function name="print" />
  </class>
</unit>
