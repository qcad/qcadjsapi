<?xml version="1.0"?>
<unit xmlns="http://qcad.org/namespaces/src" xmlns:qc="http://qcad.org/namespaces/xsl" filename="RPolylineData.h">
  <class name="RPolylineData">
    <super_list>
      <super name="REntityData" />
      <super name="RPolyline" />
    </super_list>
    <constructor>
      <variant>
        <parameters />
      </variant>
      <variant>
        <parameters>
          <parameter const="true" type="RPolyline" modifier="&amp;" name="polyline" />
        </parameters>
      </variant>
    </constructor>
    <function name="getType">
      <variant return-type="RS::EntityType" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="isValid">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getEndPoints">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RBox" modifier="&amp;" name="queryBox" default="RDEFAULT_RBOX" />
          <!--
          <parameter const="false" type="QList&lt;RObject::Id&gt;" modifier="*" name="subEntityIds" default="NULL" />
          -->
        </parameters>
      </variant>
    </function>
    <function name="setZ">
      <variant return-type="void" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="z" />
        </parameters>
      </variant>
    </function>
    <function name="to2D">
      <variant return-type="void" virtual="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getBoundingBox">
      <variant return-type="RBox" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="ignoreEmpty" default="false" />
        </parameters>
      </variant>
    </function>
    <function name="getMiddlePoints">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RBox" modifier="&amp;" name="queryBox" default="RDEFAULT_RBOX" />
          <!--
          <parameter const="false" type="QList&lt;RObject::Id&gt;" modifier="*" name="subEntityIds" default="NULL" />
          -->
        </parameters>
      </variant>
    </function>
    <function name="getCenterPoints">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RBox" modifier="&amp;" name="queryBox" default="RDEFAULT_RBOX" />
          <!--
          <parameter const="false" type="QList&lt;RObject::Id&gt;" modifier="*" name="subEntityIds" default="NULL" />
          -->
        </parameters>
      </variant>
    </function>
    <function name="getArcReferencePoints">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RBox" modifier="&amp;" name="queryBox" default="RDEFAULT_RBOX" />
        </parameters>
      </variant>
    </function>
    <function name="getPointsWithDistanceToEnd">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="distance" />
          <parameter const="false" type="int" modifier="" name="from" default="RS::FromAny" />
          <parameter const="true" type="RBox" modifier="&amp;" name="queryBox" default="RDEFAULT_RBOX" />
          <!--
          <parameter const="false" type="QList&lt;RObject::Id&gt;" modifier="*" name="subEntityIds" default="NULL" />
          -->
        </parameters>
      </variant>
    </function>
    <function name="getIntersectionPoints">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RShape" modifier="&amp;" name="shape" />
          <parameter const="false" type="bool" modifier="" name="limited" default="true" />
          <parameter const="true" type="RBox" modifier="&amp;" name="queryBox" default="RDEFAULT_RBOX" />
          <parameter const="false" type="bool" modifier="" name="ignoreComplex" default="true" />
        </parameters>
      </variant>
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="REntityData" modifier="&amp;" name="other" />
          <parameter const="false" type="bool" modifier="" name="limited" default="true" />
          <parameter const="false" type="bool" modifier="" name="same" default="false" />
          <parameter const="true" type="RBox" modifier="&amp;" name="queryBox" default="RDEFAULT_RBOX" />
          <parameter const="false" type="bool" modifier="" name="ignoreComplex" default="true" />
        </parameters>
      </variant>
    </function>
    <function name="getVectorTo">
      <variant return-type="RVector" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="point" />
          <parameter const="false" type="bool" modifier="" name="limited" default="true" />
          <parameter const="false" type="double" modifier="" name="strictRange" default="RMAXDOUBLE" />
        </parameters>
      </variant>
    </function>
    <function name="intersectsWith">
      <variant return-type="bool" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RShape" modifier="&amp;" name="shape" />
        </parameters>
      </variant>
    </function>
    <function name="move">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="offset" />
        </parameters>
      </variant>
    </function>
    <function name="rotate">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="rotation" />
          <parameter const="true" type="RVector" modifier="&amp;" name="center" default="RDEFAULT_RVECTOR" />
        </parameters>
      </variant>
    </function>
    <function name="scale">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="scaleFactors" />
          <parameter const="true" type="RVector" modifier="&amp;" name="center" default="RDEFAULT_RVECTOR" />
        </parameters>
      </variant>
    </function>
    <function name="mirror">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RLine" modifier="&amp;" name="axis" />
        </parameters>
      </variant>
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="axis1" />
          <parameter const="true" type="RVector" modifier="&amp;" name="axis2" />
        </parameters>
      </variant>
    </function>
    <function name="flipHorizontal">
      <variant return-type="bool" virtual="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="flipVertical">
      <variant return-type="bool" virtual="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="stretch">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RPolyline" modifier="&amp;" name="area" />
          <parameter const="true" type="RVector" modifier="&amp;" name="offset" />
        </parameters>
      </variant>
    </function>
    <function name="getBoundingBoxes">
      <variant return-type="QList&lt;RBox&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="ignoreEmpty" default="false" />
        </parameters>
      </variant>
    </function>
    <function name="getReferencePoints">
      <variant return-type="QList&lt;RRefPoint&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="RS::ProjectionRenderingHint" modifier="" name="hint" default="RS::RenderTop" />
        </parameters>
      </variant>
    </function>
    <function name="moveReferencePoint">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="referencePoint" />
          <parameter const="true" type="RVector" modifier="&amp;" name="targetPoint" />
          <parameter const="false" type="Qt::KeyboardModifiers" modifier="" name="modifiers" default="Qt::NoModifier" />
        </parameters>
      </variant>
    </function>
    <function name="castToShape">
      <variant return-type="RShape*" virtual="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getDistanceTo">
      <variant return-type="double" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="point" />
          <parameter const="false" type="bool" modifier="" name="limited" default="true" />
          <parameter const="false" type="double" modifier="" name="range" default="0.0" />
          <parameter const="false" type="bool" modifier="" name="draft" default="false" />
          <parameter const="false" type="double" modifier="" name="strictRange" default="RMAXDOUBLE" />
        </parameters>
      </variant>
    </function>
    <function name="getPolylineShape">
      <variant return-type="RPolyline" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="clear">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="normalize">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="tolerance" default="RS::PointTolerance" />
        </parameters>
      </variant>
    </function>
    <function name="getVertices">
      <variant return-type="QList&lt;RVector&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getVertexAt">
      <variant return-type="RVector" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
        </parameters>
      </variant>
    </function>
    <function name="appendVertex">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="vertex" />
          <parameter const="false" type="double" modifier="" name="bulge" default="0.0" />
          <parameter const="false" type="double" modifier="" name="w1" default="0.0" />
          <parameter const="false" type="double" modifier="" name="w2" default="0.0" />
        </parameters>
      </variant>
    </function>
    <function name="prependVertex">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="vertex" />
          <parameter const="false" type="double" modifier="" name="bulge" default="0.0" />
          <parameter const="false" type="double" modifier="" name="w1" default="0.0" />
          <parameter const="false" type="double" modifier="" name="w2" default="0.0" />
        </parameters>
      </variant>
    </function>
    <function name="insertVertex">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="index" />
          <parameter const="true" type="RVector" modifier="&amp;" name="vertex" />
        </parameters>
      </variant>
    </function>
    <function name="removeLastVertex">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="removeVertex">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="index" />
        </parameters>
      </variant>
    </function>
    <function name="countSegments">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getSegmentAt">
      <variant return-type="QSharedPointer&lt;RShape&gt;" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
        </parameters>
      </variant>
    </function>
    <function name="getBulgeAt">
      <variant return-type="double" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
        </parameters>
      </variant>
    </function>
    <function name="setBulgeAt">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
          <parameter const="false" type="double" modifier="" name="b" />
        </parameters>
      </variant>
    </function>
    <function name="getVertexAngle">
      <variant return-type="double" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
          <parameter const="false" type="RS::Orientation" modifier="" name="orientation" default="RS::UnknownOrientation" />
        </parameters>
      </variant>
    </function>
    <function name="getDirection1">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getDirection2">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="reverse">
      <variant return-type="bool" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getEndPoint">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getStartPoint">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="relocateStartPoint">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="p" />
        </parameters>
      </variant>
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="dist" />
        </parameters>
      </variant>
    </function>
    <function name="setClosed">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="on" />
        </parameters>
      </variant>
    </function>
    <function name="isClosed">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="isGeometricallyClosed">
      <variant return-type="bool" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="tolerance" default="RS::PointTolerance" />
        </parameters>
      </variant>
    </function>
    <function name="autoClose">
      <variant return-type="bool" access="public">
        <parameters />
      </variant>
    </function>
    <function name="toLogicallyClosed">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="tolerance" default="RS::PointTolerance" />
        </parameters>
      </variant>
    </function>
    <function name="toLogicallyOpen">
      <variant return-type="bool" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getOrientation">
      <variant return-type="RS::Orientation" const="true" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="implicitelyClosed" default="false" />
        </parameters>
      </variant>
    </function>
    <function name="setGlobalWidth">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="w" />
        </parameters>
      </variant>
    </function>
    <function name="setStartWidthAt">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
          <parameter const="false" type="double" modifier="" name="w" />
        </parameters>
      </variant>
    </function>
    <function name="getStartWidthAt">
      <variant return-type="double" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
        </parameters>
      </variant>
    </function>
    <function name="setEndWidthAt">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
          <parameter const="false" type="double" modifier="" name="w" />
        </parameters>
      </variant>
    </function>
    <function name="getEndWidthAt">
      <variant return-type="double" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
        </parameters>
      </variant>
    </function>
    <function name="hasWidths">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setStartWidths">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QList&lt;double&gt;" modifier="&amp;" name="sw" />
        </parameters>
      </variant>
    </function>
    <function name="getStartWidths">
      <variant return-type="QList&lt;double&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setEndWidths">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QList&lt;double&gt;" modifier="&amp;" name="ew" />
        </parameters>
      </variant>
    </function>
    <function name="getEndWidths">
      <variant return-type="QList&lt;double&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getExploded">
      <variant return-type="QList&lt;QSharedPointer&lt;RShape&gt;&gt;" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="segments" default="RDEFAULT_MIN1" />
        </parameters>
      </variant>
    </function>
    <function name="toPainterPath">
      <variant return-type="RPainterPath" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="simplify">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="angleTolerance" />
        </parameters>
      </variant>
    </function>
    <function name="roundAllCorners">
      <variant return-type="RPolyline" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="radius" />
        </parameters>
      </variant>
    </function>
    <function name="verifyTangency">
      <variant return-type="QList&lt;RVector&gt;" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="toleranceMin" default="RS::AngleTolerance" />
          <parameter const="false" type="double" modifier="" name="toleranceMax" default="M_PI_4" />
        </parameters>
      </variant>
    </function>
    <function name="getShapes">
      <variant return-type="QList&lt;QSharedPointer&lt;RShape&gt;&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RBox" modifier="&amp;" name="queryBox" default="RDEFAULT_RBOX" />
          <parameter const="false" type="bool" modifier="" name="ignoreComplex" default="false" />
          <parameter const="false" type="bool" modifier="" name="segment" default="false" />
          <!--
          <parameter const="false" type="QList&lt;RObject::Id&gt;" modifier="*" name="entityIds" default="NULL" />
          -->
        </parameters>
      </variant>
    </function>
    <function name="setPolylineGen">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="on" />
        </parameters>
      </variant>
    </function>
    <function name="getPolylineGen">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setElevation">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="v" />
        </parameters>
      </variant>
    </function>
    <function name="getElevation">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
  </class>
</unit>
