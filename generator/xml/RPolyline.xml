<?xml version="1.0"?>
<unit xmlns="http://qcad.org/namespaces/src" xmlns:qc="http://qcad.org/namespaces/xsl" filename="RPolyline.h">
  <class_decl name="RBox" />
  <class_decl name="RLine" />
  <class name="RPolyline" sharedpointer="true" proxy="true">
    <super_list>
      <super name="RShape" downcast="true" />
      <super name="RExplodable" />
    </super_list>
    <constructor>
      <variant>
        <parameters />
      </variant>
      <variant>
        <parameters>
          <parameter const="true" type="QList&lt;RVector&gt;" modifier="&amp;" name="vertices" />
          <parameter const="false" type="bool" modifier="" name="closed" />
        </parameters>
      </variant>
      <variant>
        <parameters>
          <parameter const="true" type="QList&lt;QSharedPointer&lt;RShape&gt;&gt;" modifier="&amp;" name="segments" />
        </parameters>
      </variant>
    </constructor>
    <function name="getShapeType">
      <variant return-type="RShape::Type" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="clone">
      <variant return-type="QSharedPointer&lt;RShape&gt;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="isDirected">
      <variant return-type="bool" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setZ">
      <variant return-type="void" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="z" />
        </parameters>
      </variant>
    </function>
    <function name="isFlat">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getVectorProperties">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getDoubleProperties">
      <variant return-type="QList&lt;double&gt;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getBoolProperties">
      <variant return-type="QList&lt;bool&gt;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="clear">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="normalize">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="tolerance" default="RS::PointTolerance" />
        </parameters>
      </variant>
    </function>
    <function name="prependShape">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="true" type="RShape" modifier="&amp;" name="shape" />
        </parameters>
      </variant>
    </function>
    <function name="appendShape">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="true" type="RShape" modifier="&amp;" name="shape" />
          <parameter const="false" type="bool" modifier="" name="prepend" default="false" />
        </parameters>
      </variant>
    </function>
    <function name="appendShapeAuto">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="true" type="RShape" modifier="&amp;" name="shape" />
        </parameters>
      </variant>
    </function>
    <function name="appendShapeTrim">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="true" type="RShape" modifier="&amp;" name="shape" />
        </parameters>
      </variant>
    </function>
    <function name="closeTrim">
      <variant return-type="bool" access="public">
        <parameters />
      </variant>
    </function>
    <function name="appendVertex">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="vertex" />
          <parameter const="false" type="double" modifier="" name="bulge" default="0.0" />
          <parameter const="false" type="double" modifier="" name="w1" default="0.0" />
          <parameter const="false" type="double" modifier="" name="w2" default="0.0" />
        </parameters>
      </variant>
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="x" />
          <parameter const="false" type="double" modifier="" name="y" />
          <parameter const="false" type="double" modifier="" name="bulge" default="0.0" />
          <parameter const="false" type="double" modifier="" name="w1" default="0.0" />
          <parameter const="false" type="double" modifier="" name="w2" default="0.0" />
        </parameters>
      </variant>
    </function>
    <function name="prependVertex">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="vertex" />
          <parameter const="false" type="double" modifier="" name="bulge" default="0.0" />
          <parameter const="false" type="double" modifier="" name="w1" default="0.0" />
          <parameter const="false" type="double" modifier="" name="w2" default="0.0" />
        </parameters>
      </variant>
    </function>
    <function name="insertVertex">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="index" />
          <parameter const="true" type="RVector" modifier="&amp;" name="vertex" />
          <parameter const="false" type="double" modifier="" name="bulgeBefore" default="0.0" />
          <parameter const="false" type="double" modifier="" name="bulgeAfter" default="0.0" />
        </parameters>
      </variant>
    </function>
    <function name="insertVertexAt">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="point" />
        </parameters>
      </variant>
    </function>
    <function name="insertVertexAtDistance">
      <variant return-type="RVector" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="dist" />
        </parameters>
      </variant>
    </function>
    <function name="removeFirstVertex">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="removeLastVertex">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="removeVertex">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="index" />
        </parameters>
      </variant>
    </function>
    <function name="removeVerticesAfter">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="index" />
        </parameters>
      </variant>
    </function>
    <function name="removeVerticesBefore">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="index" />
        </parameters>
      </variant>
    </function>
    <function name="isEmpty">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setVertices">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QList&lt;RVector&gt;" modifier="&amp;" name="vertices" />
        </parameters>
      </variant>
    </function>
    <function name="getVertices">
      <variant return-type="QList&lt;RVector&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setVertexAt">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
          <parameter const="true" type="RVector" modifier="&amp;" name="v" />
        </parameters>
      </variant>
    </function>
    <function name="moveVertexAt">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
          <parameter const="true" type="RVector" modifier="&amp;" name="offset" />
        </parameters>
      </variant>
    </function>
    <function name="getVertexAt">
      <variant return-type="RVector" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
        </parameters>
      </variant>
    </function>
    <function name="getVertexIndex">
      <variant return-type="int" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="v" />
          <parameter const="false" type="double" modifier="" name="tolerance" default="RS::PointTolerance" />
        </parameters>
      </variant>
    </function>
    <function name="getLastVertex">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="countVertices">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setBulges">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QList&lt;double&gt;" modifier="&amp;" name="b" />
        </parameters>
      </variant>
    </function>
    <function name="getBulges">
      <variant return-type="QList&lt;double&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getBulgeAt">
      <variant return-type="double" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
        </parameters>
      </variant>
    </function>
    <function name="setBulgeAt">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
          <parameter const="false" type="double" modifier="" name="b" />
        </parameters>
      </variant>
    </function>
    <function name="hasArcSegments">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getVertexAngles">
      <variant return-type="QList&lt;double&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getVertexAngle">
      <variant return-type="double" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
          <parameter const="false" type="RS::Orientation" modifier="" name="orientation"
          default="RS::UnknownOrientation" />
        </parameters>
      </variant>
    </function>
    <function name="setGlobalWidth">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="w" />
        </parameters>
      </variant>
    </function>
    <function name="setStartWidthAt">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
          <parameter const="false" type="double" modifier="" name="w" />
        </parameters>
      </variant>
    </function>
    <function name="getStartWidthAt">
      <variant return-type="double" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
        </parameters>
      </variant>
    </function>
    <function name="setEndWidthAt">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
          <parameter const="false" type="double" modifier="" name="w" />
        </parameters>
      </variant>
    </function>
    <function name="getEndWidthAt">
      <variant return-type="double" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
        </parameters>
      </variant>
    </function>
    <function name="hasWidths">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setStartWidths">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QList&lt;double&gt;" modifier="&amp;" name="sw" />
        </parameters>
      </variant>
    </function>
    <function name="getStartWidths">
      <variant return-type="QList&lt;double&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setEndWidths">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QList&lt;double&gt;" modifier="&amp;" name="ew" />
        </parameters>
      </variant>
    </function>
    <function name="getEndWidths">
      <variant return-type="QList&lt;double&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setClosed">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="on" />
        </parameters>
      </variant>
    </function>
    <function name="isClosed">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="isGeometricallyClosed">
      <variant return-type="bool" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="tolerance" default="RS::PointTolerance" />
        </parameters>
      </variant>
    </function>
    <function name="autoClose">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="tolerance" default="RS::PointTolerance" />
        </parameters>
      </variant>
    </function>
    <function name="toLogicallyClosed">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="tolerance" default="RS::PointTolerance" />
        </parameters>
      </variant>
    </function>
    <function name="toLogicallyOpen">
      <variant return-type="bool" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getSelfIntersectionPoints">
      <variant return-type="QList&lt;RVector&gt;" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="tolerance" default="RS::PointTolerance" />
        </parameters>
      </variant>
    </function>
    <function name="getOrientation">
      <variant return-type="RS::Orientation" const="true" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="implicitelyClosed" default="false" />
        </parameters>
      </variant>
    </function>
    <function name="setOrientation">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="false" type="RS::Orientation" modifier="" name="orientation" />
        </parameters>
      </variant>
    </function>
    <function name="convertArcToLineSegments">
      <variant return-type="RPolyline" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="segments" />
        </parameters>
      </variant>
    </function>
    <function name="convertArcToLineSegmentsLength">
      <variant return-type="RPolyline" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="segmentLength" />
        </parameters>
      </variant>
    </function>
    <function name="contains">
      <variant return-type="bool" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="point" />
          <parameter const="false" type="bool" modifier="" name="borderIsInside" default="false" />
          <parameter const="false" type="double" modifier="" name="tolerance" default="RS::PointTolerance" />
        </parameters>
      </variant>
    </function>
    <function name="containsShape">
      <variant return-type="bool" const="true" access="public">
        <parameters>
          <parameter const="true" type="RShape" modifier="&amp;" name="shape" />
        </parameters>
      </variant>
    </function>
    <function name="getPointInside">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getStartPoint">
      <variant return-type="RVector" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getEndPoint">
      <variant return-type="RVector" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getMiddlePoint">
      <variant return-type="RVector" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="moveStartPoint">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="pos" />
        </parameters>
      </variant>
    </function>
    <function name="moveEndPoint">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="pos" />
        </parameters>
      </variant>
    </function>
    <function name="moveSegmentAt">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
          <parameter const="true" type="RVector" modifier="&amp;" name="offset" />
        </parameters>
      </variant>
    </function>
    <function name="getDirection1">
      <variant return-type="double" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getDirection2">
      <variant return-type="double" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getSideOfPoint">
      <variant return-type="RS::Side" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="point" />
        </parameters>
      </variant>
    </function>
    <function name="getBoundingBox">
      <variant return-type="RBox" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getArea">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getLength">
      <variant return-type="double" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getDistanceFromStart">
      <variant return-type="double" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="p" />
        </parameters>
      </variant>
    </function>
    <function name="getDistancesFromStart">
      <variant return-type="QList&lt;double&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="p" />
        </parameters>
      </variant>
    </function>
    <function name="getLengthTo">
      <variant return-type="double" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="p" />
          <parameter const="false" type="bool" modifier="" name="limited" default="true" />
        </parameters>
      </variant>
    </function>
    <function name="getSegmentsLength">
      <variant return-type="double" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="fromIndex" />
          <parameter const="false" type="int" modifier="" name="toIndex" />
        </parameters>
      </variant>
    </function>
    <function name="getEndPoints">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getMiddlePoints">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getCenterPoints">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getPointAtPercent">
      <variant return-type="RVector" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="p" />
        </parameters>
      </variant>
    </function>
    <function name="getPointsWithDistanceToEnd">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="distance" />
          <parameter const="false" type="int" modifier="" name="from" default="RS::FromAny" />
        </parameters>
      </variant>
    </function>
    <function name="getPointCloud">
      <variant return-type="QList&lt;RVector&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="segmentLength" />
        </parameters>
      </variant>
    </function>
    <function name="getAngleAt">
      <variant return-type="double" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="distance" />
          <parameter const="false" type="RS::From" modifier="" name="from" default="RS::FromStart" />
        </parameters>
      </variant>
    </function>
    <function name="getVectorTo">
      <variant return-type="RVector" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="point" />
          <parameter const="false" type="bool" modifier="" name="limited" default="true" />
          <parameter const="false" type="double" modifier="" name="strictRange" default="RMAXDOUBLE" />
        </parameters>
      </variant>
    </function>
    <function name="getDistanceTo">
      <variant return-type="double" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="point" />
          <parameter const="false" type="bool" modifier="" name="limited" default="true" />
          <parameter const="false" type="double" modifier="" name="strictRange" default="RMAXDOUBLE" />
        </parameters>
      </variant>
    </function>
    <function name="getClosestSegment">
      <variant return-type="int" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="point" />
        </parameters>
      </variant>
    </function>
    <function name="getClosestVertex">
      <variant return-type="int" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="point" />
        </parameters>
      </variant>
    </function>
    <function name="move">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="offset" />
        </parameters>
      </variant>
    </function>
    <function name="rotate">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="rotation" />
          <parameter const="true" type="RVector" modifier="&amp;" name="center" default="RDEFAULT_RVECTOR" />
        </parameters>
      </variant>
    </function>
    <function name="scale">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="scaleFactor" />
          <parameter const="true" type="RVector" modifier="&amp;" name="center" default="RDEFAULT_RVECTOR" />
        </parameters>
      </variant>
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="scaleFactors" />
          <parameter const="true" type="RVector" modifier="&amp;" name="center" default="RDEFAULT_RVECTOR" />
        </parameters>
      </variant>
    </function>
    <function name="mirror">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RLine" modifier="&amp;" name="axis" />
        </parameters>
      </variant>
    </function>
    <function name="reverse">
      <variant return-type="bool" virtual="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getReversed">
      <variant return-type="RPolyline" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="stretch">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RPolyline" modifier="&amp;" name="area" />
          <parameter const="true" type="RVector" modifier="&amp;" name="offset" />
        </parameters>
      </variant>
    </function>
    <function name="getTransformed">
      <variant return-type="QSharedPointer&lt;RShape&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="QTransform" modifier="&amp;" name="transform" />
        </parameters>
      </variant>
    </function>
    <function name="getTrimEnd">
      <variant return-type="RS::Ending" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="trimPoint" />
          <parameter const="true" type="RVector" modifier="&amp;" name="clickPoint" />
        </parameters>
      </variant>
    </function>
    <function name="trimStartPoint">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="trimPoint" />
          <parameter const="true" type="RVector" modifier="&amp;" name="clickPoint" default="RVector::invalid" />
          <parameter const="false" type="bool" modifier="" name="extend" default="false" />
        </parameters>
      </variant>
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="trimDist" />
        </parameters>
      </variant>
    </function>
    <function name="trimEndPoint">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="trimPoint" />
          <parameter const="true" type="RVector" modifier="&amp;" name="clickPoint" default="RVector::invalid" />
          <parameter const="false" type="bool" modifier="" name="extend" default="false" />
        </parameters>
      </variant>
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="trimDist" />
        </parameters>
      </variant>
    </function>
    <function name="getExploded">
      <variant return-type="QList&lt;QSharedPointer&lt;RShape&gt;&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="segments" default="RDEFAULT_MIN1" />
        </parameters>
      </variant>
    </function>
    <function name="getOutline">
      <variant return-type="QList&lt;RPolyline&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <!--
    <function name="getLeftRightOutline">
      <variant return-type="QList&lt;QPair&lt;RPolyline,RPolyline&gt;&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    -->
    <function name="getLeftOutline">
      <variant return-type="QList&lt;RPolyline&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getRightOutline">
      <variant return-type="QList&lt;RPolyline&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="isInterpolated">
      <variant return-type="bool" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="countSegments">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getSegmentAt">
      <variant return-type="QSharedPointer&lt;RShape&gt;" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
        </parameters>
      </variant>
    </function>
    <function name="isArcSegmentAt">
      <variant return-type="bool" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="i" />
        </parameters>
      </variant>
    </function>
    <function name="getLastSegment">
      <variant return-type="QSharedPointer&lt;RShape&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getFirstSegment">
      <variant return-type="QSharedPointer&lt;RShape&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="isStraight" static="true">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="bulge" />
        </parameters>
      </variant>
    </function>
    <function name="toPainterPath">
      <variant return-type="RPainterPath" const="true" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="addOriginalShapes" default="false" />
        </parameters>
      </variant>
    </function>
    <function name="simplify">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="tolerance" default="RS::PointTolerance" />
        </parameters>
      </variant>
    </function>
    <function name="verifyTangency">
      <variant return-type="QList&lt;RVector&gt;" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="toleranceMin" default="RS::AngleTolerance" />
          <parameter const="false" type="double" modifier="" name="toleranceMax" default="M_PI_4" />
        </parameters>
      </variant>
    </function>
    <function name="stripWidths">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setMinimumWidth">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="w" />
        </parameters>
      </variant>
    </function>
    <function name="getSegmentAtDist">
      <variant return-type="int" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="dist" />
        </parameters>
      </variant>
    </function>
    <function name="relocateStartPoint">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="p" />
        </parameters>
      </variant>
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="dist" />
        </parameters>
      </variant>
    </function>
    <function name="convertToClosed">
      <variant return-type="bool" access="public">
        <parameters />
      </variant>
    </function>
    <function name="convertToOpen">
      <variant return-type="bool" access="public">
        <parameters />
      </variant>
    </function>
    <function name="modifyPolylineCorner">
      <variant return-type="RPolyline" const="true" access="public">
        <parameters>
          <parameter const="true" type="RShape" modifier="&amp;" name="trimmedShape1" />
          <parameter const="false" type="RS::Ending" modifier="" name="ending1" />
          <parameter const="false" type="int" modifier="" name="segmentIndex1" />
          <parameter const="true" type="RShape" modifier="&amp;" name="trimmedShape2" />
          <parameter const="false" type="RS::Ending" modifier="" name="ending2" />
          <parameter const="false" type="int" modifier="" name="segmentIndex2" />
          <parameter const="true" type="RShape" modifier="*" name="cornerShape" default="NULL" />
        </parameters>
      </variant>
    </function>
    <function name="isConcave">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getConvexVertices">
      <variant return-type="QList&lt;RVector&gt;" const="true" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="convex" default="true" />
        </parameters>
      </variant>
    </function>
    <function name="getConcaveVertices">
      <variant return-type="QList&lt;RVector&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getCentroid">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="splitAtDiscontinuities">
      <variant return-type="QList&lt;RPolyline&gt;" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="tolerance" />
        </parameters>
      </variant>
    </function>
    <function name="splitAtSegmentTypeChange">
      <variant return-type="QList&lt;RPolyline&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="insertVerticesAtSelfIntersections">
      <variant return-type="bool" const="false" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getBaseAngle">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getWidth">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setWidth">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="v" />
        </parameters>
      </variant>
    </function>
    <function name="getHeight">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setHeight">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="v" />
        </parameters>
      </variant>
    </function>
    <function name="morph">
      <variant return-type="QList&lt;RPolyline&gt;" const="true" access="public">
        <parameters>
          <parameter const="true" type="RPolyline" modifier="&amp;" name="target" />
          <parameter const="false" type="int" modifier="" name="steps" />
          <parameter const="false" type="RS::Easing" modifier="" name="easing" default="RS::Linear" />
          <parameter const="false" type="bool" modifier="" name="zLinear" default="true" />
          <parameter const="false" type="double" modifier="" name="customFactor" default="RNANDOUBLE" />
        </parameters>
      </variant>
    </function>
    <function name="roundAllCorners">
      <variant return-type="RPolyline" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="radius" />
        </parameters>
      </variant>
    </function>
    <function name="getPolygonHull">
      <variant return-type="RPolyline" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="angle" />
          <parameter const="false" type="double" modifier="" name="tolerance" />
          <parameter const="false" type="bool" modifier="" name="inner" default="false" />
        </parameters>
      </variant>
    </function>
    <function name="hasProxy" static="true">
      <variant return-type="bool" access="public">
        <parameters />
      </variant>
    </function>
    <!--
    <function name="setPolylineProxy" static="true">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="RPolylineProxy" modifier="*" name="p" />
        </parameters>
      </variant>
    </function>
    <function name="getPolylineProxy" static="true">
      <variant return-type="RPolylineProxy*" access="public">
        <parameters />
      </variant>
    </function>
    -->
    <function name="isLineSegment" />
    <function name="print" />
    <preproc plain="#if QT_VERSION&gt;=0x060000" />
    <function name="copy">
      <variant return-type="RPolyline" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <preproc plain="#endif" />
  </class>
</unit>
