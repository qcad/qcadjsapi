<?xml version="1.0"?>
<unit xmlns="http://qcad.org/namespaces/src"
xmlns:qc="http://qcad.org/namespaces/xsl" filename="REllipseEntity.h">
  <class_decl name="RDocument" />
  <class_decl name="RExporter" />
  <class name="REllipseEntity" ownership="cpp" sharedpointer="true">
    <super_list>
      <super name="RObject" />
      <super name="REntity" />
    </super_list>
    <property static="true" type="RPropertyTypeId" name="PropertyCustom" />
    <property static="true" type="RPropertyTypeId" name="PropertyHandle" />
    <property static="true" type="RPropertyTypeId" name="PropertyProtected" />
    <property static="true" type="RPropertyTypeId" name="PropertyWorkingSet" />
    <property static="true" type="RPropertyTypeId" name="PropertyType" />
    <property static="true" type="RPropertyTypeId" name="PropertyBlock" />
    <property static="true" type="RPropertyTypeId" name="PropertyLayer" />
    <property static="true" type="RPropertyTypeId" name="PropertyLinetype" />
    <property static="true" type="RPropertyTypeId" name="PropertyLinetypeScale" />
    <property static="true" type="RPropertyTypeId" name="PropertyLineweight" />
    <property static="true" type="RPropertyTypeId" name="PropertyColor" />
    <property static="true" type="RPropertyTypeId" name="PropertyDisplayedColor" />
    <property static="true" type="RPropertyTypeId" name="PropertyDrawOrder" />
    <property static="true" type="RPropertyTypeId" name="PropertyCenterX" />
    <property static="true" type="RPropertyTypeId" name="PropertyCenterY" />
    <property static="true" type="RPropertyTypeId" name="PropertyCenterZ" />
    <property static="true" type="RPropertyTypeId" name="PropertyMajorPointX" />
    <property static="true" type="RPropertyTypeId" name="PropertyMajorPointY" />
    <property static="true" type="RPropertyTypeId" name="PropertyMajorPointZ" />
    <property static="true" type="RPropertyTypeId" name="PropertyRatio" />
    <property static="true" type="RPropertyTypeId" name="PropertyStartParam" />
    <property static="true" type="RPropertyTypeId" name="PropertyEndParam" />
    <property static="true" type="RPropertyTypeId" name="PropertyStartAngle" />
    <property static="true" type="RPropertyTypeId" name="PropertyEndAngle" />
    <property static="true" type="RPropertyTypeId" name="PropertyReversed" />
    <property static="true" type="RPropertyTypeId" name="PropertyStartPointX" />
    <property static="true" type="RPropertyTypeId" name="PropertyStartPointY" />
    <property static="true" type="RPropertyTypeId" name="PropertyStartPointZ" />
    <property static="true" type="RPropertyTypeId" name="PropertyEndPointX" />
    <property static="true" type="RPropertyTypeId" name="PropertyEndPointY" />
    <property static="true" type="RPropertyTypeId" name="PropertyEndPointZ" />
    <property static="true" type="RPropertyTypeId" name="PropertyCircumference" />
    <constructor>
      <variant>
        <parameters>
          <parameter const="false" type="RDocument" modifier="*"
          name="document" />
          <parameter const="true" type="REllipseData" modifier="&amp;"
          name="data" />
        </parameters>
      </variant>
    </constructor>
    <function name="init" static="true">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getRtti" static="true">
      <variant return-type="RS::EntityType" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getStaticPropertyTypeIds" static="true">
      <variant return-type="QSet&lt;RPropertyTypeId&gt;" access="public">
        <parameters />
      </variant>
    </function>
    <function name="clone">
      <variant return-type="REllipseEntity*" virtual="true" const="true"
      access="public">
        <parameters />
      </variant>
    </function>
    <function name="setShape">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="REllipse" modifier="&amp;" name="e" />
        </parameters>
      </variant>
    </function>
    <function name="setProperty">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="RPropertyTypeId" modifier=""
          name="propertyTypeId" />
          <parameter const="true" type="QVariant" modifier="&amp;"
          name="value" />
          <parameter const="false" type="RTransaction" modifier="*"
          name="transaction" default="NULL" />
        </parameters>
      </variant>
    </function>
    <function name="getProperty">
      <variant return-type="QPair&lt;QVariant,RPropertyAttributes&gt;"
      virtual="true" access="public">
        <parameters>
          <parameter const="false" type="RPropertyTypeId" modifier="&amp;"
          name="propertyTypeId" />
          <parameter const="false" type="bool" modifier="" name="humanReadable"
          default="false" />
          <parameter const="false" type="bool" modifier="" name="noAttributes"
          default="false" />
          <parameter const="false" type="bool" modifier="" name="showOnRequest"
          default="false" />
        </parameters>
      </variant>
    </function>
    <function name="exportEntity">
      <variant return-type="void" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="RExporter" modifier="&amp;"
          name="e" />
          <parameter const="false" type="bool" modifier="" name="preview"
          default="false" />
          <parameter const="false" type="bool" modifier="" name="forceSelected"
          default="false" />
        </parameters>
      </variant>
    </function>
    <function name="scaleNonUniform">
      <variant return-type="QSharedPointer&lt;REntity&gt;" virtual="true"
      access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;"
          name="scaleFactors" />
          <parameter const="true" type="RVector" modifier="&amp;"
          name="center" />
        </parameters>
      </variant>
    </function>
    <function name="getData">
      <variant return-type="REllipseData&amp;" virtual="true" access="public">
        <parameters />
      </variant>
      <!--
      <variant return-type="const REllipseData&amp;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
      -->
    </function>
    <function name="getCenter">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getMajorPoint">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getMajorRadius">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getMinorRadius">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getRatio">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getAngle">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setRatio">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="ratio" />
        </parameters>
      </variant>
    </function>
    <function name="getStartAngle">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getStartParam">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setStartParam">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="param" />
        </parameters>
      </variant>
    </function>
    <function name="getEndAngle">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getEndParam">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setEndParam">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="param" />
        </parameters>
      </variant>
    </function>
    <function name="getAngleLength">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getAngleAt">
      <variant return-type="double" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="distance" />
          <parameter const="false" type="RS::From" modifier="" name="from" />
        </parameters>
      </variant>
    </function>
    <function name="isReversed">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setReversed">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="reversed" />
        </parameters>
      </variant>
    </function>
    <function name="getStartPoint">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getEndPoint">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="isFullEllipse">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getDirection1">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getDirection2">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="reverse">
      <variant return-type="bool" virtual="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getSideOfPoint">
      <variant return-type="RS::Side" const="true" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;"
          name="point" />
        </parameters>
      </variant>
    </function>
    <function name="getParamTo">
      <variant return-type="double" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="pos" />
        </parameters>
      </variant>
    </function>
    <function name="getTrimEnd">
      <variant return-type="RS::Ending" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;"
          name="trimPoint" />
          <parameter const="true" type="RVector" modifier="&amp;"
          name="clickPoint" />
        </parameters>
      </variant>
    </function>
    <function name="trimStartPoint">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;"
          name="trimPoint" />
          <parameter const="true" type="RVector" modifier="&amp;"
          name="clickPoint" default="RVector::invalid" />
          <parameter const="false" type="bool" modifier="" name="extend"
          default="false" />
        </parameters>
      </variant>
    </function>
    <function name="trimEndPoint">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;"
          name="trimPoint" />
          <parameter const="true" type="RVector" modifier="&amp;"
          name="clickPoint" default="RVector::invalid" />
          <parameter const="false" type="bool" modifier="" name="extend"
          default="false" />
        </parameters>
      </variant>
    </function>
    <function name="getLength">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getSweep">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getPointAt">
      <variant return-type="RVector" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="angle" />
        </parameters>
      </variant>
    </function>
    <function name="approximateWithSplines">
      <variant return-type="QList&lt;RSpline&gt;" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="approximateWithArcs">
      <variant return-type="RPolyline" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="segments" />
        </parameters>
      </variant>
    </function>
    <function name="print" />
  </class>
</unit>
