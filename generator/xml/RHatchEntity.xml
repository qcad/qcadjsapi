<?xml version="1.0"?>
<unit xmlns="http://qcad.org/namespaces/src" xmlns:qc="http://qcad.org/namespaces/xsl" filename="RHatchEntity.h">
  <class_decl name="RDocument" />
  <class_decl name="RExporter" />
  <class name="RHatchEntity" ownership="cpp" sharedpointer="true">
    <super_list>
      <super name="RObject" />
      <super name="REntity" />
    </super_list>
    <property static="true" type="RPropertyTypeId" name="PropertyCustom" />
    <property static="true" type="RPropertyTypeId" name="PropertyHandle" />
    <property static="true" type="RPropertyTypeId" name="PropertyProtected" />
    <property static="true" type="RPropertyTypeId" name="PropertyWorkingSet" />
    <property static="true" type="RPropertyTypeId" name="PropertyType" />
    <property static="true" type="RPropertyTypeId" name="PropertyBlock" />
    <property static="true" type="RPropertyTypeId" name="PropertyLayer" />
    <property static="true" type="RPropertyTypeId" name="PropertyLinetype" />
    <property static="true" type="RPropertyTypeId" name="PropertyLinetypeScale" />
    <property static="true" type="RPropertyTypeId" name="PropertyLineweight" />
    <property static="true" type="RPropertyTypeId" name="PropertyColor" />
    <property static="true" type="RPropertyTypeId" name="PropertyDisplayedColor" />
    <property static="true" type="RPropertyTypeId" name="PropertyDrawOrder" />
    <property static="true" type="RPropertyTypeId" name="PropertySolid" />
    <property static="true" type="RPropertyTypeId" name="PropertyTransparency" />
    <property static="true" type="RPropertyTypeId" name="PropertyPatternName" />
    <property static="true" type="RPropertyTypeId" name="PropertyEntityPattern" />
    <property static="true" type="RPropertyTypeId" name="PropertyScaleFactor" />
    <property static="true" type="RPropertyTypeId" name="PropertyAngle" />
    <property static="true" type="RPropertyTypeId" name="PropertyOriginX" />
    <property static="true" type="RPropertyTypeId" name="PropertyOriginY" />
    <property static="true" type="RPropertyTypeId" name="PropertyVertexNX" />
    <property static="true" type="RPropertyTypeId" name="PropertyVertexNY" />
    <property static="true" type="RPropertyTypeId" name="PropertyVertexNZ" />
    <property static="true" type="RPropertyTypeId" name="PropertyLength" />
    <property static="true" type="RPropertyTypeId" name="PropertyTotalLength" />
    <property static="true" type="RPropertyTypeId" name="PropertyArea" />
    <property static="true" type="RPropertyTypeId" name="PropertyTotalArea" />
    <constructor>
      <variant>
        <parameters>
          <parameter const="false" type="RDocument" modifier="*" name="document" />
          <parameter const="true" type="RHatchData" modifier="&amp;" name="data" />
        </parameters>
      </variant>
    </constructor>
    <function name="init" static="true">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getRtti" static="true">
      <variant return-type="RS::EntityType" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getStaticPropertyTypeIds" static="true">
      <variant return-type="QSet&lt;RPropertyTypeId&gt;" access="public">
        <parameters />
      </variant>
    </function>
    <function name="clone">
      <variant return-type="RHatchEntity*" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setData">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="RHatchData" modifier="&amp;" name="d" />
        </parameters>
      </variant>
    </function>
    <function name="hasCustomPattern">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getCustomPattern">
      <variant return-type="RPattern" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setCustomPattern">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RPattern" modifier="&amp;" name="p" />
        </parameters>
      </variant>
    </function>
    <function name="setProperty">
      <variant return-type="bool" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="RPropertyTypeId" modifier="" name="propertyTypeId" />
          <parameter const="true" type="QVariant" modifier="&amp;" name="value" />
          <parameter const="false" type="RTransaction" modifier="*" name="transaction" default="NULL" />
        </parameters>
      </variant>
    </function>
    <function name="setBoundaryVector">
      <variant return-type="bool" access="public">
        <parameters>
          <parameter const="false" type="RObject::XYZ" modifier="" name="xyz" />
          <parameter const="true" type="QVariant" modifier="&amp;" name="value" />
          <parameter const="false" type="bool" modifier="" name="condition" />
        </parameters>
      </variant>
    </function>
    <function name="setComponent">
      <variant return-type="RVector" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="p" />
          <parameter const="false" type="double" modifier="" name="v" />
          <parameter const="false" type="RObject::XYZ" modifier="" name="xyz" />
        </parameters>
      </variant>
    </function>
    <function name="getProperty">
      <variant return-type="QPair&lt;QVariant,RPropertyAttributes&gt;" virtual="true" access="public">
        <parameters>
          <parameter const="false" type="RPropertyTypeId" modifier="&amp;" name="propertyTypeId" />
          <parameter const="false" type="bool" modifier="" name="humanReadable" default="false" />
          <parameter const="false" type="bool" modifier="" name="noAttributes" default="false" />
          <parameter const="false" type="bool" modifier="" name="showOnRequest" default="false" />
        </parameters>
      </variant>
    </function>
    <function name="exportEntity">
      <variant return-type="void" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="false" type="RExporter" modifier="&amp;" name="e" />
          <parameter const="false" type="bool" modifier="" name="preview" default="false" />
          <parameter const="false" type="bool" modifier="" name="forceSelected" default="false" />
        </parameters>
      </variant>
    </function>
    <function name="getData">
      <variant return-type="RHatchData&amp;" virtual="true" access="public">
        <parameters />
      </variant>
      <!--
      <variant return-type="const RHatchData&amp;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
      -->
    </function>
    <function name="getPainterPaths">
      <variant return-type="QList&lt;RPainterPath&gt;" const="true" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="draft" default="false" />
          <parameter const="false" type="double" modifier="" name="pixelSizeHint" default="0.0" />
        </parameters>
      </variant>
    </function>
    <function name="getComplexity">
      <variant return-type="int" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="newLoop">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="addBoundary">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="QSharedPointer&lt;RShape&gt;" modifier="" name="shape" />
        </parameters>
      </variant>
    </function>
    <function name="getLoopCount">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="isSolid">
      <variant return-type="bool" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setSolid">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="bool" modifier="" name="on" />
        </parameters>
      </variant>
    </function>
    <function name="getScale">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setScale">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="s" />
        </parameters>
      </variant>
    </function>
    <function name="getAngle">
      <variant return-type="double" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setAngle">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="a" />
        </parameters>
      </variant>
    </function>
    <function name="getOriginPoint">
      <variant return-type="RVector" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setOriginPoint">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="RVector" modifier="&amp;" name="op" />
        </parameters>
      </variant>
    </function>
    <function name="getPatternName">
      <variant return-type="QString" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setPatternName">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="true" type="QString" modifier="&amp;" name="n" />
        </parameters>
      </variant>
    </function>
    <function name="getTransparency">
      <variant return-type="int" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setTransparency">
      <variant return-type="void" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="t" />
        </parameters>
      </variant>
    </function>
    <function name="clearCustomPattern">
      <variant return-type="void" access="public">
        <parameters />
      </variant>
    </function>
    <function name="getLoopBoundary">
      <variant return-type="QList&lt;QSharedPointer&lt;RShape&gt;&gt;" const="true" access="public">
        <parameters>
          <parameter const="false" type="int" modifier="" name="index" />
        </parameters>
      </variant>
    </function>
    <function name="getBoundaryAsPolylines">
      <variant return-type="QList&lt;RPolyline&gt;" const="true" access="public">
        <parameters>
          <parameter const="false" type="double" modifier="" name="segmentLength" />
        </parameters>
      </variant>
    </function>
    <function name="getShapes">
      <variant return-type="QList&lt;QSharedPointer&lt;RShape&gt;&gt;" virtual="true" const="true" access="public">
        <parameters>
          <parameter const="true" type="RBox" modifier="&amp;" name="queryBox" default="RDEFAULT_RBOX" />
          <parameter const="false" type="bool" modifier="" name="ignoreComplex" default="false" />
          <parameter const="false" type="bool" modifier="" name="segment" default="false" />
          <!--
          <parameter const="false" type="QList&lt;RObject::Id&gt;" modifier="*" name="entityIds" default="NULL" />
          -->
        </parameters>
      </variant>
    </function>
    <function name="getExploded">
      <variant return-type="QList&lt;QSharedPointer&lt;RShape&gt;&gt;" virtual="true" const="true" access="public">
        <parameters />
      </variant>
    </function>
    <function name="setViewportContext">
      <variant return-type="void" virtual="true" access="public">
        <parameters>
          <parameter const="true" type="RViewportData" modifier="&amp;" name="origin" />
        </parameters>
      </variant>
    </function>
    <function name="print" />
  </class>
</unit>
